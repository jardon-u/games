pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- game: isaac
-- author: ugo jardonnet
-- 
-- todo:
-- bomb droping
-- secret room
-- rocks
-- blue heart
-- room doors based on types
-- level theme
-- multiple stages

p = {
 life    = 1.5,
 maxlife = 3,
 bomb    = 1,
 maxbomb = 3,
 -- position
 x = 64, y = 72,
 -- cell width.height
 wx = 2, wy = 2,
 --sprite
 s = 64,
 -- sprite sequence
 anim = {66,66,66,66,66,
         70,70,70,70,70,
         68,68,68,68,68,
         70,70,70,70,70},
 -- anim index
 a = 1,
 -- flip sprite
 f = false,
 -- gauge
 invincible=0,
 cooldown=0,
 -- tear properties
 tear_rate=20,
 tsize=2,
 -- items
 double_shot=false,
 proptosis=false,
 holy_mantle=false,
 mind=false,
}
 
-- move player
function p.move()
 p.s = 64
 if (p.vx!=0 or p.vy!=0) then
 	p.s,p.a = rot(p.anim, p.a)
 end
 p.f= p.vx>0
 local nx = p.x+p.vx
 local ny = p.y+p.vy
 if not solida(nx-4,p.y,
               6,6) then
 	p.x=nx
 end
 if not solida(p.x-4,ny,
               6,6) then
 	p.y=ny
 end
 -- update last player dir
 if p.vx!=0 or p.vy!=0 then
	  lx,ly=p.vx,p.vy
	end
end

-- check if map cell with
-- flag 0 below area
function solida(x,y,w,h)
	for i=flr(x/8),flr((x+w)/8) do
	for j=flr(y/8),flr((y+h)/8) do
		if fget(mget(i,j),0) then
			return true
		end
	end
	end
	return false
end

-- draw the minimap
function draw_minimap()
	for i=1,5 do
	for j=1,5 do
		local r=level[j][i]
		if r.type!=0 and
		   (r.seen or p.mind) then
			local c=7
			if i!=ri or j!=rj then
			 local t=r.type
			 if not r.visited and t==1
			 then
			 	t = -1
			 end
			 c=roomcolor(t)
			end
			rect(95+i*4,3+j*3,
			    	95+i*4+4,3+j*3+3,
			     5)
			rectfill(95+i*4+1,3+j*3+1,
			         95+i*4+3,3+j*3+2,
			         c)
		end -- end of !=0 and seen
	end
	end
end

function proj3(i,maxi)
	local k=0
	if i>1 and i<maxi then
		k=1
	elseif i == maxi then
		k=2
	end
	return k
end

--true if pixel x,y is part
-- of sprite e
function psolid(e,x,y)
	-- coord in sprite
	local xsp = x-(e.x-e.wx*4)
	local ysp = y-(e.y-e.wy*4)
	-- coordinate in sprite sheet
	local v=1
	if e.s != nil then
		local sx=e.s*8%128 + xsp
		local sy=flr(e.s/16)*8 + ysp
		v = sget(sx, sy)
	end
	return v != 0
end

function pixel_collide(a,b,inter)
 for j=inter.x1,inter.x2 do
	for i=inter.y1,inter.y2 do
		if psolid(a,j,i) and
		   psolid(b,j,i) then
		   return true
		end
	end
	end
	return false
end

-- bbox intersection
-- then pixel tests inside
function hit(a,b)
	local ax=a.x-a.wx*4
	local bx=b.x-b.wx*4
	local x_left=max(ax,bx)
	local ax2=a.x+a.wx*4
	local bx2=b.x+b.wx*4
	local x_right=min(ax2,bx2)
	if x_right < x_left then
		return false
	end
	local ay=a.y-a.wy*4
	local by=b.y-b.wy*4
	local y_top=max(ay,by)
	local ay2=a.y+a.wy*4
	local by2=b.y+b.wy*4
	local y_bottom=min(ay2,by2)
	if y_bottom < y_top then
	 return false
	end

	local inter={
		x1=x_left,
		x2=x_right,
		y1=y_top,
		y2=y_bottom
	}
	return pixel_collide(a,b,inter)
end

function draw_hud()
 --drawlife
 local fullhp=flr(p.life)
 local y=4
 for i=1,p.maxlife do
  if i<=fullhp then
  	spr(s_heart,i*8,y,1,1)
  elseif i==fullhp+1 then
  	if p.life-fullhp!=0 then
  	 spr(s_hheart,i*8,y,1,1)
  	else
  	 spr(s_bheart,i*8,y,1,1)
  	end
		else
			spr(s_bheart,i*8,y,1,1)
  end
 end
 for i=1,p.maxbomb do
  if i<=p.bomb then
  	spr(52, 40+i*8, y)
  end
 end
end

function shoot_tears()
	if (p.cooldown<=0 and
	    keys:held(4)) then
		local w=flr(p.tsize/8)
		if p.double_shot then
		 local px,py=rot90(lx,ly)
			add(tears, {
	   x=p.x-px*3, y=p.y-4-py*3,
		  vx=lx*1.3, vy=ly*1.3,
		  wx=w,wy=w,
		  size=p.tsize})
		 add(tears, {
	   x=p.x+px*3, y=p.y-4+py*3,
		  vx=lx*1.3, vy=ly*1.3,
		  wx=w,wy=w,
		  size=p.tsize})
		else
	  add(tears, {
	   x=p.x, y=p.y-4,
		  vx=lx*1.3, vy=ly*1.3,
		  wx=w,wy=w,
		  size=p.tsize})
		end
		p.cooldown=p.tear_rate
	end
end

-- update shooting tears
function upd_tears()
	local r=level[rj][ri]
	for t in all(tears) do
		t.x += t.vx
		t.y += t.vy
		if p.proptosis and
		   t.size > 1 then
			t.size-=0.1
		end
		if t.x < 4 or t.x > 116
		 or t.y < 24 or t.y > 114 then
			del(tears,t)
		end
		for e in all(r.emies) do
			if hit(e,t) then
				sfx(1)
				e.life-=t.size/5
				e.x += t.vx*2
				e.y += t.vy*2
		  del(tears,t)
			end
		end
	end
end

function reset(nb_rooms)
 gridw,gridh=5,5
	p.x,p.y=64,72

	tears = {}
	level=genlevel(nb_rooms)

	-- gen first room
	-- last player direction
	lx,ly=1,0
	ri,rj=3,3
	gen_room(ri,rj)
end

-- global init
function _init()
 reset(6)
end

function sort_y(t)
 function _y(e)
  return e.y
 end
 qsort(t,1,#t,_y)
end

-- fixme draw everything like this
function draw_actors()
	local r=level[rj][ri]
	local as = {p}
	for e in all(r.emies) do
		add(as,e)
	end
	sort_y(as)
	if p.holy_mantle and
	   r.no_hit then
		circ(p.x-1,p.y+4, 4, 12)
  circ(p.x-1,p.y+4, 6, 13)
	end
	for a in all(as) do
		draw(a)
	end
end

function roomcolor(v)
	cmap={}
	cmap[-1]=5 -- unseen=grey
	cmap[1]=12 -- room=blue
	cmap[2]=8  -- boss=red
	cmap[3]=10 -- item=yellow
	cmap[4]=13 -- secret=blue grey
 return cmap[v] or 0
end

function draw_tears()
	for t in all(tears) do
	 circfill(t.x,t.y,t.size,7)
	 circ(t.x,t.y,t.size,5)
	end
end

-- main draw
function _draw()
	cls()
	if p.life<=0 then
		print("game over", 48, 0, 7)
		--return
	end

	local r=level[rj][ri]
	pal(8,roomcolor(r.type))
	map(0,0, 0,0, 32, 32)
	pal()
	draw_minimap()
	draw_hud()
	-- draw elements for the room
	for e in all(r.elts) do
		draw(e)
	end
	draw_actors()
	draw_tears(t)
end

-- change room if necessary
function upd_room()
	if p.y<24 then
		gen_room(ri,rj-1)
		p.x,p.y = 64,106
	end
	if p.y>112 then
		gen_room(ri,rj+1)
		p.x,p.y = 64,32
	end
	if p.x<4 then
		gen_room(ri-1,rj)
		p.x,p.y = 118,68
	end
	if p.x>124 then
		gen_room(ri+1,rj)
		p.x,p.y = 12,68
	end
end

function upd_elts()
 local r=level[rj][ri]
	for e in all(r.elts) do		
		if hit(p,e) then
			if e.s == s_heart then
				p.life += 1
			end
			if e.s == s_bomb then
				p.bomb += 1
			end
			if e.s == s_mush then
				p.maxlife +=1
				p.life  = p.maxlife
				p.tsize = 3
			end
			if e.s == s_dshot then
				p.double_shot=true
			end
			if e.s == s_prop then
				p.proptosis=true
				p.tsize *= 2
			end
			if e.s == s_holy then
				p.holy_mantle=true
			end
			if e.s == s_mind then
				p.mind=true
			end
			del(r.elts,e)
			sfx(0)
		end
	end
end

-- main update
function _update60()
	if p.cooldown > 0 then
		p.cooldown-=1
	end
	if p.invincible > 0 then
		p.invincible-=1
	end

	if p.life <= 0 then
		--return
	end

	keys:update()

 -- move
 p.vx,p.vy = 0,0
	if (keys:held(1)) p.vx +=1
	if (keys:held(2))	p.vy -=1
	if (keys:held(3)) p.vy +=1
	if (keys:held(0)) p.vx -=1

	shoot_tears()
	
	upd_room()
	upd_elts()
	upd_emies()
	upd_tears()
	p.move()
end

-->8
-- utils

-- pick random element in t
function rpick(t)
	local i=flr(rnd(#t))+1
	return t[i]
end

-- quick sort
function qsort(t,i,j,op)
	if i>=j then
		return
	end
	local pi = i
	for k=i+1,j do
		if op(t[pi]) > op(t[k]) then
			local tmp = t[pi] 
			t[pi] = t[k]
			t[k] = tmp
			pi=k
		end
	end
	qsort(t,i,pi,op)
	qsort(t,pi+1,j,op)
end

function dist(a,b)
	local dx=a.x-b.x
	local dy=a.y-b.y
 return sqrt(dx*dx+dy*dy)
end

-- rotate index i over table t
function rot(t, i)
	i += 1
	if i > #t then
		i = 1
	end
	return t[i], i
end

-- rotate 2d vec 90 degrees
function rot90(vx, vy)
	return vy, -vx
end

-- draw element
function draw(e)
	spr(e.s,
	 e.x-(e.wx*8)/2,
	 e.y-(e.wy*8)/2,
	 e.wx, e.wy,
	 e.f)
end

--multimset
function mmset(cx,cy,s,w,h)
 for i=0,h-1 do
 	for j=0,w-1 do
 	 local ss=s+j+16*i
 		mset(cx+j,cy+i,ss)
 	end
 end
end

-- print all elements
function prtt(t)
 for e in all(t) do
	 print(e)
	end
end

--gen_mat
function _mat(lines, cols, fun)
	local m = {}
	for i=1,lines do
	 m[i] = {}
	 for j=1,cols do
		 m[i][j] = fun()
	 end
	end
	return m
end

-- keys
keys = { btns={}, ct={} }
function keys:update()
 for i=0,13 do
  if band(btn(),shl(1,i))==shl(1,i) then
   if keys:held(i) then
    keys.btns[i]=2
    keys.ct[i]+=1
   else
    keys.btns[i]=3
   end
  else
   if keys:held(i) then 
    keys.btns[i]=4
	  else
    keys.btns[i]=0
    keys.ct[i]=0
   end
  end
 end
end

function keys:held(b) return band(keys.btns[b],2) == 2 end
function keys:down(b) return band(keys.btns[b],1) == 1 end
function keys:up(b) return band(keys.btns[b],4) == 4 end
function keys:pulse(b,r) return (keys:held(b) and keys.ct[b]%r==0) end

-->8
-- level generation

-- return empty and assigned
-- surrounding rooms
function nbgh(i,j,l)
	local cands = {
		{i-1,j}, {i+1,j},
		{i,j-1}, {i,j+1}
	}
	local free={}
	local occupied={}
	for c in all(cands) do
		local i,j=c[1],c[2]
		if i!=0 and j!=0 and
     i!=gridh+1 and
     j!=gridw+1	then
			if l[j][i].type!=0 then
				add(occupied,c)
			else
				add(free,c)
			end
		end
	end
	return free, occupied
end

-- check if door lead to
-- boss room
function isnextboss(doors,l)
	for d in all(doors) do
		if l[d[2]][d[1]].type == 2 then
			return true
		end
	end
	return false
end

-- add secret room
-- 2 doors
function addsecret(last,l)
	for r in all(last) do
	 ri,rj=r[1],r[2]
		free,_=nbgh(ri,rj,l)
		for f in all(free) do
			_,doors=nbgh(f[1],f[2],l)			
			if #doors>=2 and
				not isnextboss(doors,l)
				then
				l[f[2]][f[1]].type=4
				return f[1],f[2]
			end
		end
	end
	--fixme what if no slot found
end

-- add special room
-- (only one door)
function addsroom(f,l,t)
 local doors={}
 fi,fj=f[1],f[2]
 -- while not 1 door
 while #doors!=1 do
  -- check free room with 1 door
 	local free,occ=nbgh(fi,fj,l)
 	for c in all(free) do
 		fi,fj=c[1],c[2]
 		_,doors=nbgh(fi,fj,l)
 		if #doors==1 then
 		 -- found
 			break
 		end
 	end
 	-- if no free room ok
 	-- start from rand occupied
 	-- room around
 	if #doors!=1 then
 		f=rpick(occ)
 		local t=l[f[2]][f[1]].type
 		while t!=1 do
 			f=rpick(occ)
 		end
 		fi,fj=f[1],f[2]
 	end
 end
 -- add room
	l[fj][fi].type = t
	return fi,fj
end

function _room()
	return {
		type=0,
		seen=false,
		visited=false,
		closed=true,
		emies={},
		elts={},
		cx=0,
		cy=0
	}
end

function get_item(pool)
 --todo add item pool
	local all_items = {
	s_mush,
 s_holy,
 s_prop,
 s_brim,
 s_godh,
 s_dshot,
 s_poop,
 s_mind,
	}
	return _item(rpick(all_items),
														64, 72)
end

--simple level generation
function genlevel(nbr)
	local l=_mat(gridw,gridh,_room)
	
	-- start with central room
	local cj=ceil(gridw/2)
	local ci=ceil(gridh/2)
	l[cj][ci].type=1
 local last={{ci,cj}}
 nbr -= 1

	-- keep adding rooms
	while #last!=nbr do
		local room=rpick(last)
		local i,j=room[1],room[2]
		-- get free cells around
		free,_=nbgh(i,j,l)
		if #free!=0 then
			c=rpick(free)
			-- add room
			l[c[2]][c[1]].type=1
			l[c[2]][c[1]].cx=flr(rnd(4))
			l[c[2]][c[1]].cy=flr(rnd(3))
			add(last,c)
		end
	end
	-- add item room
	-- (close to first room)
	local f={ci,cj}
	ii,ij=addsroom(f,l,3)
	l[ij][ii].elts={get_item(3)}
	
	-- add boss room
	-- (close to last room)
	local f=last[#last]
	ii,ij=addsroom(f,l,2)
	l[ij][ii].cx=0
	l[ij][ii].cy=3
	
	-- add secret room
	addsecret(last,l)
	
	return l
end

--read cell in i,j in map cx,cy
function get_cell(i,j,cx,cy)
	local v=sget(cx+j-1,cy+96+i-1)
	return v
end

function floorspr(v)
	if v==6 then
	 ss=34
	elseif v==12 then
 	ss=196
 else
		ss=32
	end
	return ss 
end

function clearroom(r)
 r.emies={}
	r.no_hit=true

 -- draw walls
 for i=1,16 do
  mset(i-1,2,53)
  mset(i-1,15,53)
 end
 for i=1,16 do
 	for j=1,12 do
 	 local x=proj3(i,16)
 	 local y=proj3(j,12)
 	 if x==0 or y==0 or
      x==2 or y==2 then
    local ss=6+x+16*y
 	  mset(i-1,j+2,ss)
  	end
  end
 end
 
 -- draw floor
 local cx=8*r.cx
	local cy=6*r.cy
 for i=1,5 do
 	for j=1,7 do
 	 local jj=j*2-1
 	 local ii=(i+1)*2
   local v=get_cell(i,j,cx,cy)
   local ss=floorspr(v)
   mset(jj,  ii,  ss)
   mset(jj+1,ii,  ss+1)
   mset(jj,  ii+1,ss+16)
   mset(jj+1,ii+1,ss+16+1)
   if v==8 and r.closed then
				add(r.emies,
				    _enemy(jj*8+8,ii*8+8))   	
   end
   if v==2 and r.closed then
    local boss=rpick(all_bosses)
    boss.x=jj*8+8
    boss.y=ii*8+8
    add(r.emies,boss)   
   end
  end
 end
end

function seerooms(i,j)
	local nbgh = {
		{i-1,j}, {i+1,j},
		{i,j-1}, {i,j+1}
	}
	for c in all(nbgh) do
	 if 0<c[2] and c[2]<=gridh and
	    0<c[1] and c[1]<=gridw then
	 	local r=level[c[2]][c[1]]
	 	if r.type!=s_secret then
	 		r.seen=true
	 	end
		end
	end
end

function setdoors(i,j)
	local r=level[j][i]
	--emies is set in clearroom
	r.closed=#r.emies!=0
	local shift=0
	if r.closed then
		shift=2
	elseif r.type==r_secret then
		shift=-2
	end
	if j-1>0 then
		local top=level[j-1][i]
	 if top.type!=r_empty then
	 	if top.type==r_secret then
	 	 mmset(7,3,11-2,2,1)
			else
			 mmset(7,3,11+shift,2,1)
	  end
	 end
	end
	if j<gridw then
	 local bottom=level[j+1][i]
	 if bottom.type!=r_empty then
 	 if bottom.type==r_secret then
	 		mmset(7,14,27-2,2,1)
	  else
			 mmset(7,14,27+shift,2,1)
		 end
		end
	end
	if i-1>0 then
		local left=level[j][i-1]
	 if left.type!=r_empty then
	  if left.type==r_secret then
	   mmset(0,8,43-2,1,2)
	  else
		  mmset(0,8,43+shift,1,2)
		 end
		end
	end
	if i<gridh then
		local right=level[j][i+1]
	 if right.type!=0 then
		 if right.type==4 then
	 	 mmset(15,8,44-2,1,2)
		 else
		  mmset(15,8,44+shift,1,2)
	  end
	 end
	end
end

function gen_room(i, j)
	tears={}
	local r=level[j][i]
	r.seen=true
	r.visited=true
	clearroom(r)

	seerooms(i,j)
 setdoors(i,j)
	
	-- set current room coord
	ri,rj=i,j
end

-->8
-- ressources

r_empty=0
r_classic=9
r_boss=6
r_item=3
r_secret=4

--sprites
s_heart=54
s_hheart=55
s_bheart=56
s_bomb=52
--item
s_mush=128
s_holy=130
s_prop=132
s_brim=134
s_godh=136
s_dshot=138
s_poop=140
s_mind=142

function heart(x, y)
	return {s=4, x=x, y=y,
	 wx=1, wy=1}
end

function bomb(x, y)
	return {s=52, x=x, y=y,
	 wx=1, wy=1}
end

function _item(s,x,y)
return {s=s, x=x, y=y,
	       wx=2, wy=2}
end

boss_zelda = {
 wx=2,
 wy=2,
 a=1,
 anim={72,72,72,72,72,
 						74,74,74,74,74},
 life=10,
 f=true,
 damage=2,
 speed=1
}
monstro = {
 wx=2,
 wy=2,
 a=1,
 anim={104,104,104,
 						106,106,106,106,106,
 						106,106},
 life=10,
 f=true,
 damage=2,
 speed=1
}
evil_isaac = {
 wx=2,
 wy=2,
 a=1,
 anim={108,108,108,108,108,
 						110,110,110,110,110},
 life=10,
 f=true,
 damage=2,
	speed=1
}
it_lives = {
 wx=2,
 wy=2,
 a=1,
 anim={76,76,76,76,76,
 						78,78,78,78,78},
 life=10,
 f=true,
 damage=2,
 speed=0
}

all_bosses={
 boss_zelda,
 monstro,
 evil_isaac,
 it_lives,
}

-->8
--enemies

function _enemy(x,y)
	return {
		life=1,
	 s=96,
		x=x,
		y=y,
		wx=2,
		wy=2,
		a=1,
 	-- sprite sequence
  anim = {98,98,98,98,98,
          102,102,102,102,102,
          100,100,100,100,100,
          102,102,102,102,102},
  f=true,
  damage=0.5,
	}
end

function upd_emies()
 local r=level[rj][ri]
 if #r.emies == 0 then
 	r.closed=false
 end
	for e in all(r.emies) do
		-- death
		if e.life <= 0 then
 		sfx(2)
			del(r.emies, e)
			setdoors(ri,rj)
		end
		
		local d=dist(p,e)
	 local vx=(p.x-e.x)/(d*3)
		local vy=(p.y-e.y)/(d*3)
		
		-- check collision with others
	 ne={x=e.x+vx,y=e.y+vy}
		local move=true
		for e2 in all(r.emies) do
		 if e != e2 then
		  dee = dist(ne,e2)
		  if dee < 5 then
	 			move=false
	 			vx=(e2.x-ne.x)/(dee*3)
	 			vy=(e2.y-ne.y)/(dee*3)
	 			break
	 		end
			end
		end
		if move then
		 if d > 5 then
		  -- go toward isaac
		  e.x+=vx
 		 e.y+=vy
 	 else
 	 	-- hit isaac and bounce
 	  sfx(1)
 	  if not (p.holy_mantle and
 	  			     r.no_hit) and
 	  			p.invincible==0 then
 	   p.life-=e.damage
 	   p.invincible=20
 	  end
 	  r.no_hit=false
 	  p.vx=vx*5
 	  p.vy=vy*5
 	  e.x-=vx*15
 		 e.y-=vy*15
   end
  else
  	-- avoid others
 		e.x-=vx*5
 		e.y-=vy*5
		end
  --if vx!=0 or vy!=0 then
	 e.s,e.a = rot(e.anim, e.a)
	 --end
	 e.f=vx>0
	end
end

__gfx__
00000555555000000000055555500000000000000000000058888888888888888888888550511111111111508885555bb5555888888555599555588800000000
00005ffffff5000000005ffffff500000055055000550550858888888888888888888858850111111111150088551111111155888855dddd5ddd558800000000
0005ffffffff50000005ffffffff5000058858850500588588588888888888888888858885501111111115508851111111111588885dddd5ddddd58800000000
005ffffffffff500005ffffffffff500058887850500878588858888888888888888588880051111111115088851111111111588885dddd5ddddd58800000000
005f57ffff57f500005f57ffff57f500058888500500885088885888888888888885888885555dd111dd15588851111111111588885dddd5ddddd58800000000
005f55ffff55f500005f55ffff55f500005885000050850088888588888888888858888888555555d555d5888851111111116588885ddddd5dddd58800000000
005fcc5555ccf500005fcc5555ccf50000055000000550008888885888888888858888888885dd5d5d5d58888851161116666588885ddddd5dddd58800000000
0005cf5555fc50000005cf5555fc5000000000000000000088888885555555555888888855555dd5551550555556666666666555555555555555555500000000
00005ffffff5000000005ffffff500000000000000000000888888857777777758888888555d555dd55555555556666666666555555555555555555500000000
0005f555555f5000005f55555555f50000550550005505508888888577777777588888888051dddd1d5d15808856666666666588885ddddd5dddd58800000000
000555ffff55500000555ffffff5550005cc5cc50555555588888885777777775888888885011d1111d110588851666666666588885ddddd5dddd58800000000
000005ffff50000000005ffffff5000005ccc7c50555575588888885777777775888888850511111111115088851666666661588885dddd5ddddd58800000000
000005f55f500000000d5ff55ff5d00005cccc500555555088888885777777775888888855111111111111558851111166611588885dddd5ddddd58800000000
000005500550000000dd555dd555dd00005cc5000055550088888885777777775888888855111111111111508851111111111588885dddd5ddddd58800000000
0000000000000000000dddddddddd0000005500000055000888888857777777758888888551111111111115588551111111155888855dddd5ddd558800000000
0000000000000000000000dddd000000000000000000000088888885777777775888888855111111111111558885555bb5555888888555599555588800000000
76666666666666676777777777777776000000000000000088888885555555555888888858888885588885558888888558888888888888855888888800000000
67777777777777707677777777777760000000000055550088888858888888888588888855508885588551558888888558888888888888855888888800000000
677777777777777077dddddddddddd00777000000557755088888588888888888858888811555585585511118555555555555558855555555555555800000000
677777777777777077dddddddddddd0070777777057777508888588888888888888588881111d55550dd1111551111166611115555ddddd55ddddd5500000000
677777777777777077dddddddddddd0077700707057777508885888888888888888858881111dd5555dd111151111166661111155dddddd55dddddd500000000
677777777777777077dddddddddddd00000000000557755088588888888888888888858811111d5555d1111151111666661111155dddddd55dddddd500000000
677777777777777077dddddddddddd00000000000055550085888888888888888888885811115d555d5d511151111666666111155dddddd55dddddd500000000
677777777777777077dddddddddddd000000000000000000588888888888888888888885111dd5dddd55d111b11116666666111b955dd5555dd55dd900000000
677777777777777077dddddddddddd000000000000000000000000000000000000000000111dd5d5d555d111b11116666666111b9dd55dd5555dd55900000000
677777777777777077dddddddddddd0000008000000000000550550005505500055055001111dd5555dd111151111166666111155dddddd55dddddd500000000
677777777777777077dddddddddddd0000001000000000005885885058855550555555501111155555dd111151111166661111155dddddd55dddddd500000000
677777777777777077dddddddddddd0000555500000000005878885058785550555555501115dd555551111151111116611111155dddddd55dddddd500000000
677777777777777077dddddddddddd0005557750000000005888885058885550555555501155d58558551111551111166111115555ddddd55ddddd5500000000
677777777777777077dddddddddddd00055557500000000005888500058855000555550055588885588555118555555555555558855555555555555800000000
67777777777777707600000000000060055555500000000000585000005850000055500088888885588808558888888558888888888888855888888800000000
70000000000000076000000000000006005555000000000000050000000500000005000088888885588888888888888558888888888888855888888800000000
00000555555000000000055555500000000005555550000000000555555000000009809999098000000980999909870700058505250020000055885525002200
00005ffffff5000000005ffffff5000000005ffffff5000000005ffffff500000009899889998707000989988999870700058505250020000005585052500220
0005ffffffff50000005ffffffff50000005ffffffff50000005ffffffff50000000997887990707000099788799077700055555555550000000555555555520
005ffffffffff500005ffffffffff500005ffffffffff500005ffffffffff5000000997777990777000099777799007000055888888855000000558888888550
005f57ffff57f500005f57ffff57f500005f57ffff57f500005f57ffff57f5007777778999998070777777899999807000558888888885500005588888888855
005f55ffff55f500005f55ffff55f500005f55ffff55f500005f55ffff55f5007877878888889870787787888888987005588558885588500055887788877885
005fcc5555ccf500005fcc5555ccf500005fcc5555ccf500005fcc5555ccf5007777778999999970777777899999988052588228882288500525882288822885
0005cf5555fc50000005cf5555fc50000005cf5555fc50000005cf5555fc50007777778999999880777777899999888852588888888888500525888888888885
00005ffffff5000000005ffffff5000000005ffffff5000000005ffffff500007777778999998888777777899999988855588885558888500055888877788885
0005f555555f50000000055555500000000055555550000000000555555000007777778888999888777777888899987955558885558885550555588875788855
000555ffff55500000005ffff5f5000000005fff5f5000000000f5fff5f500007777778998888879777777899888897805855882288855850585558888888555
000005ffff500000000005f5ff000000000005fff5000000000005ffff5000007777778888999978777777888899997805555555555555550555555555555585
000005f55f5000000000005ff5000000000000ff5f000000000005f55f5000007877878999988978787787899999997000005888885500000000058588855555
00000550055000000000005555000000000000555500000000000550555000007777778999899870777777899998897000005555525000000000005555250000
00000000000000000000000000000000000000000000000000000000000000008888888000999970888888800089987000005850050000000000000005250000
00000000000000000000000000000000000000000000000000000000000000000009999000000070000000000099990000000500000000000000000000550000
00000555555000000000055555500000000005555550000000000555555000000000000000000000000005555555000000000555555000000000055555500000
00005ffffff5000000005ffffff5000000005ffffff5000000005ffffff500000000000000000000000555ff6555500000005777777500000000577777750000
0005ff6f6fff50000005ff6f6fff50000005ff6f6fff50000005ff6f6fff500000000000000000000055fffff566550000057777777750000005777777775000
005ffffffff6f500005ffffffff6f500005ffffffff6f500005ffffffff6f5000000000550000000005666fff666f55000577777777775000057777777777500
005f87f6ff87f500005f87f6ff87f500005f87f6ff87f500005f87f6ff87f50000000555555500000556766ff676ff5500575777775775000057577777577500
005688ffff886500005688ffff886500005688ffff886500005688ffff886500000055fff555500055666665ff666ff500575577775575000057557777557500
005f99555599f500005f99555599f500005f99555599f500005f99555599f5000005765ff57655005fffff555ff6666500578855558875000057885555887500
00059f5555f9500000059f5555f9500000059f5555f9500000059f5555f950000056665ff666f5505ff55f5855556ff500058755557850000005875555785000
00005fff6ff5000000005fff6ff5000000005fff6ff5000000005fff6ff50000055ff555f6ffff555f555558758555f505555777777500000000577777755550
0005f555555f50000000055555500000000055555550000000000555555000005566f585ff666ff55f588788888855f505755555555555500555555555555750
000555ff6f55500000005f6ff5f5000000005f6f5f5000000000f56ff5f500005ff55585555556650565558787555f5505557888878757500575788887875550
0000056fff500000000005f56f000000000005f6f5000000000005f6ff5000005f557885887855f505ff5555555ff55000057787777755500555778777775000
000005f55f5000000000005ff5000000000000ff5f000000000005f55f5000005ff55788788855f50055ffffffff550000d5777777775d0000d5777777775d00
0000055005500000000000555500000000000055550000000000055055500000556f555555555ff500055555555550000ddd57755775ddd000dd57755775dd00
0000000000000000000000000000000000000000000000000000000000000000055ffffffffff5550000000000000000000d555dd775d000000d577dd555d000
0000000000000000000000000000000000000000000000000000000000000000005555555555550000000000000000000000ddddd55500000000555ddddd0000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000005550000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000500000000
0000005555000000000005d7d5000000000000000000800000000088880000000000000000000000000000000000000000050500000000000000005750000000
0000058777500000000055cdc5500000000005555500000000000885588000000055555555555500000000000000000000005000505000000000057a75000000
0000588788850000000555cdc55500000080557775500000000008555580000005aaaa5775cccc5000000550055000000000000005000000000057aaa7500000
0000588788750000005dcccdcccd500000805776575000000008888558888000005aa575575cc50000005000005500000000005000000000000057aaa7500000
0005787777775000005cddddddd7500000005775575500000088555555558800005a57575575c500000500000000500000000545500000000000577a77500000
0005777887785000005dcccdcccd5000000557777755550000088885588880000005775555775000000555555555500000000554450000000000056565000000
0005878887885000000555cdc5550000005558777855855000085555555580000000577557750000005567500567550000005445545000000005557a75550000
0005587887855000000055cdc5500000005855888558850000855855558558000000555555550000005677755677750000054555444500000057aa575aa75000
0000555555550000000005cdc5000000005555555545500000858885588858000000058888500000005777755777750000055444445500000057aa757aa75000
000005d6fd500000000005cdc500000000005888855580000085585555855800000000588500000000057750057750000000555555500000057aa75057aa7500
0000005555000000000005dcd500000000005555555000000008555885558000000000055000000000005500005500000000000000000000057a7500057a7500
00000000000000000000005550000000000000000000000000008880088800000000000000000000000000000000000000000000000000000555500000555500
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000005850525002000005588552500220000058505250020000005850525020000000000000000000000000000000000000000000000000000
00000000000000000005850525002000000558505250022000058505250020000000585052502000000000000000000000000000000000000000000000000000
00000000000000000005555555555000000055555555552000055555555020000000555555555200000000000000000000000000000000000000000000000000
00000000000000000005588888885500000055888888855000055888885520000000558888855200000000000000000000000000000000000000000000000000
00000000000000000055888888888550000558888888885500558888888550000005588888885500000000000000000000000000000000000000000000000000
00000000000000000558855888558850005588778887788500588558558850000005887787788500000000000000000000000000000000000000000000000000
00000000000000005258822888228850052588228882288502588888888855000025888888888550000000000000000000000000000000000000000000000000
00000000000000005258888888888850052588888888888502588855588855000025888777888550000000000000000000000000000000000000000000000000
00000000000000005558888555888850005588887778888505558855588585000055588757885850000000000000000000000000000000000000000000000000
00005555555500005555888555888555055558887578885505855888885550000058558888855500000000000000000000000000000000000000000000000000
00055aaaaaa550000585588228885585058555888888855500555555555000000005555555550000000000000000000000000000000000000000000000000000
0055aaaaaaaa55000555555555555555055555555555558500005588850000000000055888500000000000000000000000000000000000000000000000000000
0059aaaaaaaa95000000588888550000000005858885555500005855525000000000058555250000000000000000000000000000000000000000000000000000
00559aaaaaa955000000555552500000000000555525000000005850050000000000005005250000000000000000000000000000000000000000000000000000
00055999999550000000585005000000008000000525000000000500000000000000000000500000000000000000000000000000000000000000000000000000
00005555555500000000050000000000000000000055000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0c0c0c05000c0005000000050000000576666666666666670ccccccc1cccccc0ccccccc0705111111111115000000000000000007cc7c77cc77c700700000000
c06c60c508000805000c06050ccccc056cccccccccccccc0c0111111c11111101111110cc7011111111115000000000000000000c770c77cc77c077c00000000
00c0c0050c060c0506c8c605086668056cccccccccccccc0c1011000c11111100001101cc7501111111115700000000000000000c770c77cc77c077c00000000
c06c60c508000805060c00050ccccc056cccccccccccccc0c110cccc10000001cccc011c70051111111115070000000000000000c770700cc007077c00000000
0c0c0c05000c000500000005000000056cccccccccccccc0c1100111ccc11ccc1110011ccc555dd111dd155c0000000000000000c5707cccccc7075c00000000
555555555555555555555555555555556cccccccccccccc0c110c0111110c111110c011c77555555d555d5770000005dd50000005550c77cc77c055500000000
00c0c80500000005000000050c000c056cccccccccccccc0c110c10100011000101c011c0005dd5d5d5d500000055555555550005555c77cc77c555500000000
000600050868680506666605c60006c56cccccccccccccc01001c115cccccccc511c1cc1cc555dd55515505c00551111111155005115577cc775511500000000
0066600500c0c005066c6605008680056cccccccccccccc01cc1c11c66666666c11c1001c55d555dd55555cc7c511111111115c05111557cc755111500000000
000600050868680506666605c60006c56cccccccccccccc0c110c11c66666666c11c011c7051dddd1d5d15c0c7511111111115705111155cc556111500000000
08c0c00500000005000000050c000c056cccccccccccccc0c110c11c66666666c11c011cc5011d1111d1105cc751111111111570511161555566111500000000
555555555555555555555555555555556cccccccccccccc0c110100c66666666c001011c70511111111115077051111111111507511666655666611500000000
0c0c0c05cc606cc5000000058ccccc856cccccccccccccc0c1101ccc66666666ccc1011c051111111111115ccc511111111115cc511666655666111500000000
c8ccc8c566606665008880050c000c056cccccccccccccc0c110c11c66666666c11c011c75111111111111507751111111116577511166655666111500000000
0cc8cc0500000005008880050c0c0c056cccccccccccccc0c110c11c66666666c11c011c75111111111111570051161116666500511666655661111500000000
c8ccc8c566606665008880050c000c0570000000000000051001c11c66666666c11c1cc15511111111111155cc566666666665cc551166655661115500000000
0c0c0c05cc606cc5000000058ccccc8576666666666666671cc1c115cccccccc511c100c5cc7c77cc77c7555cc566666666665cc751166655666115700000000
555555555555555555555555555555556777777777777770c110c1511cccccc1151c011c5550c77cc77551557c566666666665c7c55166655661155c00000000
000000050000000500000005000000056777777777777770c110c511c111111c115c011c1155557cc7551111c75166666666657cc75566655666557c00000000
0ccccc050000000500000005000000056777777777777770c1105111100000011115011c1111d55cc0dd11117051666666661507c77556655665577c00000000
0c020c050000000500000005000000056777777777777770c115ccccccc11ccccccc511c1111dd5cc5dd1111cc511111666115ccc77055655655077c00000000
0ccccc050000000500000005000000056777777777777770c15110001110c1110001151c11111d5555d111117751111111111577c770c555555c077c00000000
000000050000000500000005000000056777777777777770c51111111110c1111111115c11115d555d5d51117751111111111577c770c755557c077c00000000
5555555555555555555555555555555567777777777777700ccccccc00011000ccccccc5111dd5dddd55d11100511111111115007007c775577c7cc700000000
000000050000000500000005000000056777777777777770000000000000000000000000111dd5d5d555d1110055111111115500000000000000000000000000
0000000500000005000000050000000567777777777777700000000000000000000000001111dd5555dd11110005555555555000000000000000000000000000
0000000500000005000000050000000567777777777777700000000000000000000000001111155c55dd11110000005dd5000000000000000000000000000000
0000000500000005000000050000000567777777777777700000000000000000000000001115dd5cc55111110000000000000000000000000000000000000000
0000000500000005000000050000000567777777777777700000000000000000000000001155d5cccc5511110000000000000000000000000000000000000000
5555555555555555555555555555555567777777777777700000000000000000000000005550c77cc77555110000000000000000000000000000000000000000
000000000000000000000000000000006777777777777770000000000000000000000000c770c77cc77c07550000000000000000000000000000000000000000
0000000000000000000000000000000070000000000000070000000000000000000000007007c77cc77c7cc70000000000000000000000000000000000000000
__label__
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000055055000550550005505500000000000000000000008000000000000000000000000000000000000000000000000000000000000000000000000000
00000000588588505885555055555550000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000
00000000587888505878555055555550000000000000000000555500000000000000000000000000000000000000000000000000000000000000000000000000
00000000588888505888555055555550000000000000000005557750000000000000000000000000000000000000000000000000000000000000000000000000
00000000058885000588550005555500000000000000000005555750000000000000000000000000000000000000000000000000000555550000000000000000
000000000058500000585000005550000000000000000000055555500000000000000000000000000000000000000000000000000005ddd50000000000000000
000000000005000000050000000500000000000000000000005555000000000000000000000000000000000000000000000000000005ddd50000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555555555555000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555577755555000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555577755555000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005555555555555000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005aaa50000000000000000
000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000005aaa50000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000555550000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5ccccccccccccccccccccccccccccccccccccccccccccccccccccccc5051111111111150ccccccccccccccccccccccccccccccccccccccccccccccccccccccc5
c5ccccccccccccccccccccccccccccccccccccccccccccccccccccccc501111111111500cccccccccccccccccccccccccccccccccccccccccccccccccccccc5c
cc5cccccccccccccccccccccccccccccccccccccccccccccccccccccc550111111111550ccccccccccccccccccccccccccccccccccccccccccccccccccccc5cc
ccc5ccccccccccccccccccccccccccccccccccccccccccccccccccccc00511111111150ccccccccccccccccccccccccccccccccccccccccccccccccccccc5ccc
cccc5cccccccccccccccccccccccccccccccccccccccccccccccccccc5555dd111dd155cccccccccccccccccccccccccccccccccccccccccccccccccccc5cccc
ccccc5cccccccccccccccccccccccccccccccccccccccccccccccccccc555555d555d5cccccccccccccccccccccccccccccccccccccccccccccccccccc5ccccc
cccccc5cccccccccccccccccccccccccccccccccccccccccccccccccccc5dd5d5d5d5cccccccccccccccccccccccccccccccccccccccccccccccccccc5cccccc
ccccccc555555555555555555555555555555555555555555555555555555dd5551550555555555555555555555555555555555555555555555555555ccccccc
ccccccc576666666666666677666666666666667766666666666666776666666666666677666666666666667766666666666666776666666666666675ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc570000000000000077000000000000005700000000000000770000000000000057000000000000007700000000000000570000000000000075ccccccc
ccccccc576666666666666677666666666666667677777777777777676666666666666676777777777777776766666666666666776666666666666675ccccccc
ccccccc56cccccccccccccc0677777777777777076777777777777606cccccccccccccc0767777777777776067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777076000000000000606cccccccccccccc0760000000000006067777777777777706cccccccccccccc05ccccccc
ccccccc570000000000000057000000000000007600000000000000670000000000000056000000000000006700000000000000770000000000000055ccccccc
ccccccc576666666666666677666666666666667766666666666666776666555555666677666666666666667766666666666666776666666666666675ccccccc
ccccccc5677777777777777067777777777777706cccccccccccccc067775ffffff577706cccccccccccccc0677777777777777067777777777777705ccccccc
c5555555677777777777777067777777777777706cccccccccccccc06775ffffffff57706cccccccccccccc0677777777777777067777777777777705555555c
55111116677777777777777067777777777777706cccccccccccccc0675ffffffffff5706cccccccccccccc06777777777777770677777777777777066111155
51111166677777777777777067777777777777706cccccccccccccc0675f57ffff57f5706cccccccccccccc06777777777777770677777777777777066111115
51111666677777777777777067777777777777706cccccccccccccc0675f55ffff55f5706cccccccccccccc06777777777777770677777777777777066111115
51111666677777777777777067777777777777706cccccccccccccc0675fcc5555ccf5706cccccccccccccc06777777777777770677777777777777066611115
b1111666677777777777777067777777777777706cccccccccccccc06775cf5555fc57706cccccccccccccc0677777777777777067777777777777706666111b
b1111666677777777777777067777777777777706cccccccccccccc067775ffffff577706cccccccccccccc0677777777777777067777777777777706666111b
51111166677777777777777067777777777777706cccccccccccccc06775f555555f57706cccccccccccccc06777777777777770677777777777777066611115
51111166677777777777777067777777777777706cccccccccccccc0677555ffff5557706cccccccccccccc06777777777777770677777777777777066111115
51111116677777777777777067777777777777706cccccccccccccc0677775ffff5777706cccccccccccccc06777777777777770677777777777777061111115
55111116677777777777777067777777777777706cccccccccccccc0677775f55f5777706cccccccccccccc06777777777777770677777777777777061111155
c5555555677777777777777067777777777777706cccccccccccccc067777557755777706cccccccccccccc0677777777777777067777777777777705555555c
ccccccc5677777777777777067777777777777706cccccccccccccc067777777777777706cccccccccccccc0677777777777777067777777777777705ccccccc
ccccccc570000000000000077000000000000007700000000000000570000000000000077000000000000005700000000000000770000000000000075ccccccc
ccccccc576666666666666677666666666666667677777777777777676666666666666676777777777777776766666666666666776666666666666675ccccccc
ccccccc56cccccccccccccc0677777777777777076777777777777606cccccccccccccc0767777777777776067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777077dddddddddddd006cccccccccccccc077dddddddddddd0067777777777777706cccccccccccccc05ccccccc
ccccccc56cccccccccccccc0677777777777777076000000000000606cccccccccccccc0760000000000006067777777777777706cccccccccccccc05ccccccc
ccccccc570000000000000057000000000000007600000000000000670000000000000056000000000000006700000000000000770000000000000055ccccccc
ccccccc576666666666666677666666666666667766666666666666776666666666666677666666666666667766666666666666776666666666666675ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc567777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777706cccccccccccccc067777777777777705ccccccc
ccccccc570000000000000077000000000000005700000000000000770000000000000057000000000000007700000000000000570000000000000075ccccccc
ccccccc555555555555555555555555555555555555555555555555555566666666665555555555555555555555555555555555555555555555555555ccccccc
cccccc5ccccccccccccccccccccccccccccccccccccccccccccccccccc566666666665ccccccccccccccccccccccccccccccccccccccccccccccccccc5cccccc
ccccc5cccccccccccccccccccccccccccccccccccccccccccccccccccc516666666665cccccccccccccccccccccccccccccccccccccccccccccccccccc5ccccc
cccc5ccccccccccccccccccccccccccccccccccccccccccccccccccccc516666666615ccccccccccccccccccccccccccccccccccccccccccccccccccccc5cccc
ccc5cccccccccccccccccccccccccccccccccccccccccccccccccccccc511111666115cccccccccccccccccccccccccccccccccccccccccccccccccccccc5ccc
cc5ccccccccccccccccccccccccccccccccccccccccccccccccccccccc511111111115ccccccccccccccccccccccccccccccccccccccccccccccccccccccc5cc
c5cccccccccccccccccccccccccccccccccccccccccccccccccccccccc551111111155cccccccccccccccccccccccccccccccccccccccccccccccccccccccc5c
5cccccccccccccccccccccccccccccccccccccccccccccccccccccccccc5555bb5555cccccccccccccccccccccccccccccccccccccccccccccccccccccccccc5
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000

__gff__
0000000000000101010000000000000000000000000001000100000000000000000001010000010101000000000000000000010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010100000000010100000000000000010001000000000000000000000000000101010000000000000000000000000000000000000000000000
__sfx__
000100000f05013050150501a0501f05022050250502c050320503405000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001814014150101500d1500b1500a1500915000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100001b15021150231501e150161501f150251501f150181501e15026150211501b1501a150191501815018150181500000000000000000000000000000000000000000000000000000000000000000000000
